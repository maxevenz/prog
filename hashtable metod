using System;
using System.Collections;
using System.Collections.Generic;

class Program
{
    public static void PrintAllKeysAndValues(Hashtable ht)
    {
        ICollection k= ht.Keys;
        Console.WriteLine("KEYS\tVALUES");
        foreach(string  i in k){
        Console.WriteLine($"{i} :  {ht[i]}");}
    }
    public static int Add(Hashtable ht)
    {
          int n= Convert.ToInt32(Console.ReadLine());
          for (int i=0; i<n;i++)
        {
        string key=Console.ReadLine();
        string value=Console.ReadLine();
        ht.Add(key, value);
        }
        PrintAllKeysAndValues(ht);
        return n;
    }
    public static void Clear(Hashtable ht)
    {
        ht.Clear();
        PrintAllKeysAndValues(ht);
    }
    public static void ContainsKey(Hashtable ht)
    {
        Add(ht);
        string b= Console.ReadLine();
        if (ht.ContainsKey(b)==true)
        {
            Console.WriteLine($"Hashtable ht contains the Key {b}");
        }
        else  Console.WriteLine($"Hashtable ht doesn`t contain the Key {b}");
    }
    public static void ContainsValue(Hashtable ht)
    {
        Add(ht);
        string b= Console.ReadLine();
        if (ht.ContainsValue(b)==true)
        {
            Console.WriteLine($"Hashtable ht contains the Value {b}");
        }
        else  Console.WriteLine($"Hashtable ht doesn`t contain the Value {b}");
    }
    public static void Remove(Hashtable ht)
    {
        Add(ht);
        Console.WriteLine("Введите ключ удаляемого объекта");
        string key= Console.ReadLine();
        ht.Remove(key);
        PrintAllKeysAndValues(ht);
    }
    public static void GGetHash(Hashtable ht)
    {
        Add(ht);
        int code = ht.GetHashCode();
        Console.WriteLine(code);
    }
    public static void Clone(Hashtable ht)
    {
        Add(ht);
        ht.Clone();
        Console.WriteLine("\nКлонирование успешно завершено...");
    }
    static void Main()
    {
        var ht= new Hashtable();
        Console.WriteLine("Menu");
        Console.WriteLine("1. Add");
        Console.WriteLine("2. Clear");
        Console.WriteLine("3. ContainsKey");
        Console.WriteLine("4. ContainsValue");
        Console.WriteLine("5. Remove");
        Console.WriteLine("6. GetHash");
        Console.WriteLine("7. Clone");
        int a= Convert.ToInt32(Console.ReadLine());
        switch(a)
        {
            case 1: Add(ht); break;
            case 2: Clear (ht); break;
            case 3: ContainsKey(ht); break;
            case 4: ContainsValue(ht); break;
            case 5: Remove(ht); break;
            case 6: GGetHash(ht); break;
            case 7: Clone(ht); break;
        }
    }
}
